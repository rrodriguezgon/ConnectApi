version: '3.7'
services:
  apm-server:
    image: docker.elastic.co/apm/apm-server:7.3.2
    ports:
      - 8200:8200
      - 6060:6060
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E apm-server.host=0.0.0.0:8200
        -E setup.kibana.host=kibana:5601
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    logging:
      driver: 'json-file'
      options:
          max-size: '2m'
          max-file: '5'
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://apm-server:8200/healthcheck"]
      retries: 10
      interval: 10s
    networks:
      - docker_elk
    depends_on:
      - elasticsearch
  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.3.2'
    restart: always
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock: {soft: -1, hard: -1}
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://elasticsearch:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
      retries: 10
      interval: 20s
    volumes:
      - elasticsearchlocal:/usr/share/elasticsearch/data'
    ports:
      - '9200:9200'
      - '9300:9300'
    networks:
      - docker_elk
  kibana:
    container_name: kibana
    restart: always
    image: 'docker.elastic.co/kibana/kibana:7.3.2'
    environment:
      - "ELASTICSEARCH_URL=http://elasticsearch:9200"
    ports:
      - '5601:5601'
    networks:
      - docker_elk
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://kibana:5601/"]
      retries: 10
      interval: 10s
    depends_on:
      - elasticsearch
volumes:
  elasticsearchlocal:
    driver: local
  redislocal:
    driver: local
networks:
  docker_elk:
    driver: bridge